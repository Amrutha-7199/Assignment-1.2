# -*- coding: utf-8 -*-
"""Data_Visualization_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15PyOrQYVWnxu0cgG1eXVABd8vyWS-K0w
"""

import pandas as pd

df=pd.read_csv('StudentsPerformance.csv')

df.head(10)

df.shape

df.isnull().sum() # Check for Null values

df.duplicated().sum() # Check for duplicates

"""# Data Visualization

# Distribution of Math Scores by Gender
"""

import matplotlib.pyplot as plt
import seaborn as sns

# Setting up the style for better visuals
sns.set(style="whitegrid")

# Visualization 1: Distribution of Math Scores based on Gender
plt.figure(figsize=(10, 6))
sns.histplot(df, x='math score', hue='gender', kde=True, bins=30, palette='pastel', edgecolor='black')
plt.title('Distribution of Math Scores by Gender')
plt.xlabel('Math Score')
plt.ylabel('Frequency')
plt.show()

"""# Average Scores across Subjects for Each Parental Education Level"""

# Visualization 2: Average Scores across Subjects for Each Parental Education Level
plt.figure(figsize=(14, 8))
avg_scores = df.groupby('parental level of education')[['math score', 'reading score', 'writing score']].mean().reset_index()
avg_scores = pd.melt(avg_scores, id_vars="parental level of education", var_name="Subject", value_name="Average Score")

sns.barplot(x='parental level of education', y='Average Score', hue='Subject', data=avg_scores, palette='muted')
plt.title('Average Scores by Parental Level of Education')
plt.xlabel('Parental Level of Education')
plt.ylabel('Average Score')
plt.xticks(rotation=45, ha='right')
plt.legend(title='Subject')
plt.show()

"""# Box Plot of Test Preparation Course Effect on Scores"""

# Visualization 3: Box Plot of Test Preparation Course Effect on Scores
plt.figure(figsize=(12, 8))
sns.boxplot(x='test preparation course', y='math score', data=df, palette='Set3', width=0.5)
plt.title('Effect of Test Preparation Course on Math Scores')
plt.xlabel('Test Preparation Course')
plt.ylabel('Math Score')
plt.show()

"""# Correlation Heatmap of Scores"""

# Visualization 4: Correlation Heatmap of Scores
plt.figure(figsize=(10, 6))
correlation_matrix = df[['math score', 'reading score', 'writing score']].corr()

sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5, linecolor='white', square=True)
plt.title('Correlation Heatmap of Scores')
plt.show()

"""# Average Scores by Lunch Type"""

# Visualization 5: Pair Plot of Scores
plt.figure(figsize=(10, 10))
sns.pairplot(df[['math score', 'reading score', 'writing score']], diag_kind='kde', palette='Set1')
plt.suptitle('Pair Plot of Math, Reading, and Writing Scores', y=1.02)
plt.show()

"""# Gender Comparison of Test Preparation Course Completion"""

# Visualization 6: Gender Comparison of Test Preparation Course Completion
plt.figure(figsize=(10, 6))
gender_test_prep = df.groupby(['gender', 'test preparation course']).size().reset_index(name='Count')
gender_test_prep_pivot = gender_test_prep.pivot(index='gender', columns='test preparation course', values='Count')

gender_test_prep_pivot.plot(kind='bar', stacked=True, color=['skyblue', 'salmon'], edgecolor='black', figsize=(10, 6))
plt.title('Gender Comparison of Test Preparation Course Completion')
plt.ylabel('Number of Students')
plt.xlabel('Gender')
plt.xticks(rotation=0)
plt.legend(title='Test Preparation Course')
plt.show()

